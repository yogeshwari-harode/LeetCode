import java.util.*;

class Solution {
    public int[] frequencySort(int[] nums) {
        int n = nums.length;

        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n; i++) {
            map.put(nums[i], map.getOrDefault(nums[i], 0) + 1);
        }

        List<Integer> list = new ArrayList<>();
        for (int num : map.keySet()) {
            list.add(num);
        }

        // Sort the list based on frequency and value
        Collections.sort(list, (a, b) -> {
            if (map.get(a).equals(map.get(b))) {
                return b - a; // Sort descending by number if frequencies are the same
            } else {
                return map.get(a) - map.get(b); // Sort ascending by frequency
            }
        });

        // Step 4: Build the result array
        int[] result = new int[n];
        int idx = 0;
        for (int num : list) {
            for (int i = 0; i < map.get(num); i++) {
                result[idx++] = num;
            }
        }

        return result;
    }
}
