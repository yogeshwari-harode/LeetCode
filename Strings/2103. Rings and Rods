class Solution {
    public int countPoints(String rings) {
        int r[]=new int[10];
        int g[]=new int[10];
        int b[]=new int[10];
        for(int i=0;i<rings.length();i+=2)
        {
            int a=rings.charAt(i+1)-'0';
            if(rings.charAt(i)=='R')
            r[a]++;
            else if(rings.charAt(i)=='G')
            g[a]++;
            else
            b[a]++;
        }
        int ans=0;
        for(int i=0;i<10;i++)
        {
            if(r[i]>0&&b[i]>0&&g[i]>0)
            ans++;
        }
        return ans;
    }
}


//__________________________________OR___________________________________

class Solution {
    public int countPoints(String rings) {
        Set<Character>[] rods = new HashSet[10];
        for (int i = 0; i < 10; i++) {
            rods[i] = new HashSet<>();
        }

        for (int i = 0; i < rings.length(); i += 2) {
            char color = rings.charAt(i); 
            int rodIndex = rings.charAt(i + 1) - '0'; 
            rods[rodIndex].add(color);
        }

        int count = 0;
        for (Set<Character> rod : rods) {
            if (rod.contains('R') && rod.contains('G') && rod.contains('B')) {
                count++;
            }
        }

        return count;
    }
}
